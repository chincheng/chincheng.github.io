<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Wed, 06 Mar 2019 12:00:35 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installation_Go</title>
      <link>/installation_go/</link>
      <pubDate>Wed, 06 Mar 2019 12:00:35 +0000</pubDate>
      
      <guid>/installation_go/</guid>
      <description>How I Install newest Go compiler  Install Go from distribution. ( It may be old version.)
 $ sudo apt install golang-go
 Make a directory to clone the source code of Go.
$ mkdir ~/workspace $ cd ~/workspace $ git clone https://go.googlesource.com/go $ cd go  Checkout branch to new version (1.12 now)
 $ git checkout go1.12
 Go to src directory and run a script of building Go compiler</description>
    </item>
    
    <item>
      <title>Install OS for Raspberry Pi CM3</title>
      <link>/install-os-for-raspberry-pi-cm3/</link>
      <pubDate>Sat, 01 Dec 2018 17:44:17 +0000</pubDate>
      
      <guid>/install-os-for-raspberry-pi-cm3/</guid>
      <description>How to flash OS image into SD for Raspberry Pi CM3 It is more easy by using Linux system
items needed in installing process:
 &amp;ldquo;rpiboot&amp;rdquo; &amp;ldquo;Raspbian lite&amp;rdquo; image: Do not use image for desktop because CM1/CM3 only has 4GB eMMC. It can be downloaded from official site, https://www.raspberrypi.org/downloads/raspbian/  Compile &amp;ldquo;rpiboot&amp;rdquo; ( use Ubuntu as example)
 Open a terminal in Linux host PC Install packages needed:  sudo apt-get update sudo apt-get install -y git make gcc libusb-1.</description>
    </item>
    
    <item>
      <title>Build a Docker Image</title>
      <link>/build-a-docker-image/</link>
      <pubDate>Thu, 01 Nov 2018 08:41:42 +0000</pubDate>
      
      <guid>/build-a-docker-image/</guid>
      <description> Build a container image of Hugo  $ docker build -t ownName/imageName
 Dockerfile for building image:
FROM alpine:latest LABEL maintainer=&amp;quot;xxxxx@outlook.com&amp;quot; RUN apk add --no-cache \ curl \ git \ openssh-client \ rsync ENV VERSION 0.50 RUN mkdir -p /usr/local/src \ &amp;amp;&amp;amp; cd /usr/local/src \ &amp;amp;&amp;amp; curl -L https://github.com/gohugoio/hugo/releases/download/v${VERSION}/hugo_${VERSION}_linux-64bit.tar.gz | tar -xz \ &amp;amp;&amp;amp; mv hugo /usr/local/bin/hugo \ &amp;amp;&amp;amp; curl -L https://bin.equinox.io/c/dhgbqpS8Bvy/minify-stable-linux-amd64.tgz | tar -xz \ &amp;amp;&amp;amp; mv minify /usr/local/bin/ \ &amp;amp;&amp;amp; addgroup -Sg 1000 hugo \ &amp;amp;&amp;amp; adduser -SG hugo -u 1000 -h /src hugo WORKDIR /src EXPOSE 1313  </description>
    </item>
    
    <item>
      <title>Building A Website Using Hugo</title>
      <link>/building-a-website-using-hugo/</link>
      <pubDate>Wed, 31 Oct 2018 08:02:41 +0000</pubDate>
      
      <guid>/building-a-website-using-hugo/</guid>
      <description>This is a good tutorial of building a website using Hugo.
 </description>
    </item>
    
  </channel>
</rss>